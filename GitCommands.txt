A3----------------------------------

Cheat Sheet - Git Commands Used in This Section

In this section, you installed and configured Git on your machine. To configure Git, you learned about different commands.
You used the following Git commands

Show the version of your Git installation:

git -v

Show the configurations:

git config -l

Configure your username and email:

git config --global user.name "uruc-developer@hpmini"

git config --global user.email "urucs.dev@outlook.de"

The username and email is used by Git for every commit that you will create. Without this configuration, you are not able to commit to a repository.

To show the origin of the configurations, you learned about the --show-origin parameter. It shows you in which file a configuration is located:

git config -l --show-origin

This command above allows you to find the .gitconfig file that is in your user directory. That .gitconfig file contains now the username and the email that you configured.

Now, Git is set up and configured. This means you're ready for some work! :-)

In the next section, you will learn how to work with local repositories. But before that, let's test your knowledge with some learning questions.


A4---------------------------------- Working with local repositories 
explorer .

git init

Three main areas: Working directory,rRepository and staging area

git status
git add readme.txt
git add .

$ git commit -m "readme file created"
[master (root-commit) dfb342d] readme file created
 2 files changed, 48 insertions(+)
 create mode 100644 GitCommands.txt
 create mode 100644 readme.txt 

$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   GitCommands.txt
        modified:   readme.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   readme.txt

$ git diff readme.txt
diff --git a/readme.txt b/readme.txt
index 35ba64d..427420a 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,3 +1,3 @@
 Welcome to git-lernen Project

-Author:
\ No newline at end of file
+Author: uruc-developer
\ No newline at end of file

$ git diff
diff --git a/GitCommands.txt b/GitCommands.txt
index 61e9269..a7baba1 100644
--- a/GitCommands.txt
+++ b/GitCommands.txt
@@ -48,4 +48,30 @@ $ git commit -m "readme file created"
  2 files changed, 48 insertions(+)
  create mode 100644 GitCommands.txt
  create mode 100644 readme.txt

$ git diff --staged
diff --git a/GitCommands.txt b/GitCommands.txt
index f565efb..61e9269 100644
--- a/GitCommands.txt
+++ b/GitCommands.txt
@@ -43,5 +43,9 @@ git status
 git add readme.txt
 git add .

-
+$ git commit -m "readme file created"
+[master (root-commit) dfb342d] readme file created
+ 2 files changed, 48 insertions(+)
+ create mode 100644 GitCommands.txt
+ create mode 100644 readme.txt

\ No newline at end of file
diff --git a/readme.txt b/readme.txt
index b2ab209..35ba64d 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1 +1,3 @@
-Welcome to git-lernen Project
\ No newline at end of file
+Welcome to git-lernen Project
+
+Author:
\ No newline at end of file

Default Editor for git
$ git config --global core.editor notepad

$ git config -l

Commit = Snapshot wit hash value 40 charecter ID..

Look at the history

$ git log
commit 1a33eea5042f18f1a085421ebce4fa24fc6ff02b (HEAD -> master)
Author: uruc-developer@hpmini <urucs.dev@outlook.de>
Date:   Wed Mar 20 10:14:37 2024 +0100

    Autor added to readme

commit dfb342d0c5636b753c621c6890b6826577101e42
Author: uruc-developer@hpmini <urucs.dev@outlook.de>
Date:   Wed Mar 20 09:52:27 2024 +0100

    readme file created
	
$ git log --pretty=oneline
1a33eea5042f18f1a085421ebce4fa24fc6ff02b (HEAD -> master) Autor added to readme
dfb342d0c5636b753c621c6890b6826577101e42 readme file created

git checkout master
Previous HEAD position was dfb342d readme file created
Switched to branch 'master'	
  
Ignore Files in the working tree:
.gitignore file

https://github.com/github/gitignore

  

Cheat Sheet - Git Commands Used in This Section

In this section, you created and worked with a local repository.
You used the following Git commands

Initialize an empty Git repository:

git init

Show the status of your repository:

git status

Stage a specific file:

git add readme.txt

Stage all changed files:

git add .

Commit the staged files:

git commit -m "Create readme file"

Define notepad as an editor. It will be used when you run the git commit command without -m parameter:

git config --global core.editor notepad

Show the changes of a specific file:

git diff readme.txt

Show the changes in your working directory:

git diff

Show the changes in your staging area:

git diff --staged

Show the history/log:

git log

Show the history/log with one commit per line:

git log --pretty=oneline

Checkout a specific commit by its snapshot hash:

git checkout b346471

Navigate back to your main branch:

git checkout main

Now you know how to work with a local repository.

In the next section, you will learn how to branch and merge your code. This can be helpful when you want to work on different features in parallel. But before that, let's test your knowledge with some learning questions.  

A5---------------------------------- Branching and merging code
Cheat Sheet - Git Commands Used in This Section

In this section, you learned how to branch and merge your code.
You used the following Git commands

List the local branches:

git branch

Create a new branch with the name "feature/AddTwitterHandle":

git branch feature/AddTwitterHandle

Checkout the new branch:

git checkout feature/AddTwitterHandle

Checkout the main branch:

git checkout main

Merge changes from the feature branch into the main branch. This command assumes that you have the main branch checked out:

git merge feature/AddTwitterHandle

Show a graph when showing the history:

git log --pretty=oneline --graph

Now you know how to branch and merge your code, which can be helpful when you want to work on different features in parallel.

In the next section, you will learn how to push your code to a remote repository on GitHub. But before that, let's test your knowledge with some learning questions.

---
$ git branch feature/AddTwitterHandle


$ git branch
  feature/AddTwitterHandle
* master

$ git checkout feature/AddTwitterHandle
Switched to branch 'feature/AddTwitterHandle'

$ git branch
* feature/AddTwitterHandle
  master
  
$ git commit -m "Twitter handle added"
[feature/AddTwitterHandle dbdee21] Twitter handle added
 1 file changed, 3 insertions(+), 1 deletion(-)

$ git log --pretty=oneline
dbdee21a3ea5391019c607e40c5b62bcf0152c0e (HEAD -> feature/AddTwitterHandle) Twitter handle added
5b15f53a16451287bb7a313170f1f87e952cbb63 (master) Abschnitt 5 start.
d084cf05999515df5ffea4d74ba6f3730f3936bd .gitignore file added
02ab4ea2ae503049367c8f7df4b57d6caed597b8 git history.. command
1a33eea5042f18f1a085421ebce4fa24fc6ff02b Autor added to readme
dfb342d0c5636b753c621c6890b6826577101e42 readme file created

$ git checkout master
Switched to branch 'master'

$ git branch
  feature/AddTwitterHandle
* master

$ git merge feature/AddTwitterHandle
Updating 5b15f53..dbdee21
Fast-forward
 readme.txt | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-) 
 
$ git status
On branch master
nothing to commit, working tree clean
 
$ git branch
  feature/AddTwitterHandle
* master

$ git branch -d feature/AddTwitterHandle
Deleted branch feature/AddTwitterHandle (was dbdee21).

$ git branch
* master

Handle merge conflicts:...

$ git branch feature/lastname
$ git branch feature/middlename

$ git checkout feature/lastname

$ git commit -m "Lastname added, branch:feature/lastname"
[feature/lastname 19e04a9] Lastname added, branch:feature/lastname
 1 file changed, 1 insertion(+), 1 deletion(-)

$ git checkout master

$ git merge feature/lastname
Updating 30c95ea..19e04a9
Fast-forward
 readme.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

$ git branch -d feature/lastname
Deleted branch feature/lastname (was 19e04a9).

$ git checkout feature/middlename
Switched to branch 'feature/middlename'

$ git commit -m "Middlename added, branch:feature/middlename"
[feature/middlename a15c267] Middlename added, branch:feature/middlename
 1 file changed, 1 insertion(+), 1 deletion(-)
 
$ git checkout master
Switched to branch 'master'

$ git branch
  feature/middlename
* master

$ git merge feature/middlename
Auto-merging readme.txt
CONFLICT (content): Merge conflict in readme.txt
Automatic merge failed; fix conflicts and then commit the result.

$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

$ git status
On branch master
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:
        modified:   readme.txt

		
$ git commit -m "Merge branch feature/middlename"
[master fc7c9a1] Merge branch feature/middlename

$ git branch -d feature/middlename
Deleted branch feature/middlename (was a15c267).

$ git log --pretty=oneline
fc7c9a167cc91c0cf234243710656d69427863f0 (HEAD -> master) Merge branch feature/middlename
a15c267979cdfe126a5bcb02c24fcfa8bdba3964 Middlename added, branch:feature/middlename
19e04a9d59cf5e8f851788b40c8f6a3d5a9a27ef Lastname added, branch:feature/lastname
30c95ea40429d4e7e3360863e4909a30e333f20c Handle merge conflicts start..
dbdee21a3ea5391019c607e40c5b62bcf0152c0e Twitter handle added
5b15f53a16451287bb7a313170f1f87e952cbb63 Abschnitt 5 start.
d084cf05999515df5ffea4d74ba6f3730f3936bd .gitignore file added
02ab4ea2ae503049367c8f7df4b57d6caed597b8 git history.. command
1a33eea5042f18f1a085421ebce4fa24fc6ff02b Autor added to readme
dfb342d0c5636b753c621c6890b6826577101e42 readme file created

$ git log --pretty=oneline --graph
*   fc7c9a167cc91c0cf234243710656d69427863f0 (HEAD -> master) Merge branch feature/middlename
|\
| * a15c267979cdfe126a5bcb02c24fcfa8bdba3964 Middlename added, branch:feature/middlename
* | 19e04a9d59cf5e8f851788b40c8f6a3d5a9a27ef Lastname added, branch:feature/lastname
|/
* 30c95ea40429d4e7e3360863e4909a30e333f20c Handle merge conflicts start..
* dbdee21a3ea5391019c607e40c5b62bcf0152c0e Twitter handle added
* 5b15f53a16451287bb7a313170f1f87e952cbb63 Abschnitt 5 start.
* d084cf05999515df5ffea4d74ba6f3730f3936bd .gitignore file added
* 02ab4ea2ae503049367c8f7df4b57d6caed597b8 git history.. command
* 1a33eea5042f18f1a085421ebce4fa24fc6ff02b Autor added to readme
* dfb342d0c5636b753c621c6890b6826577101e42 readme file created 

A6---------------------------------- Pushing to remote repository

Cheat Sheet - Git Commands Used in This Section

In this section, you learned how to push your code to a remote repository on GitHub.
You used the following Git commands

Add the remote repository https://repositoryURL under the name origin to your local repository:

git remote add origin https://repositoryURL

Push the first time to the main branch of the remote repository and set it as upstream:

git push -u origin main

Push the next commits to the remote repository:

git push

Clone a remote repository with the URL https://repositoryURL into a local repository on your machine:

git clone https://repositoryURL

Clone a remote repository into the current directory (Note the separate dot at the end that indicates the current directory):

git clone https://repositoryURL .

Fetch changes from the remote repository without merging them into your local branch:

git fetch

Now you know how to push your code to a remote repository on GitHub, how to clone a remote repository, and how to pull changes from the remote repository into your local repository.

In the next section, you will learn how to create so-called pull requests. But before that, let's test your knowledge with some learning questions.


----

create a new repository on the command line

echo "# git-lernen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/uruc-developer/git-lernen.git
git push -u origin main

…or push an existing repository from the command line

git remote add origin https://github.com/uruc-developer/git-lernen.git
git branch -M main
git push -u origin main

https://github.com/uruc-developer/git-lernen.git

$ git remote add origin https://github.com/uruc-developer/git-lernen.git

$ git remote -v
origin  https://github.com/uruc-developer/git-lernen.git (fetch)
origin  https://github.com/uruc-developer/git-lernen.git (push)

$ git remote
origin

$ git remote show origin
* remote origin
  Fetch URL: https://github.com/uruc-developer/git-lernen.git
  Push  URL: https://github.com/uruc-developer/git-lernen.git
  HEAD branch: (unknown)

$ git branch -M main
$ git status
On branch main
nothing to commit, working tree clean

$ git push -u origin main
info: please complete authentication in your browser...
Enumerating objects: 36, done.
Counting objects: 100% (36/36), done.
Delta compression using up to 4 threads
Compressing objects: 100% (35/35), done.
Writing objects: 100% (36/36), 6.36 KiB | 1.59 MiB/s, done.
Total 36 (delta 13), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (13/13), done.
To https://github.com/uruc-developer/git-lernen.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.

$ git remote show origin
* remote origin
  Fetch URL: https://github.com/uruc-developer/git-lernen.git
  Push  URL: https://github.com/uruc-developer/git-lernen.git
  HEAD branch: main
  Remote branch:
    main tracked
  Local branch configured for 'git pull':
    main merges with remote main
  Local ref configured for 'git push':
    main pushes to main (up to date)
	
	
	
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 353 bytes | 353.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/uruc-developer/git-lernen.git
   9c47007..f59f16f  main -> main	
	
$ git clone https://github.com/uruc-developer/git-lernen.git .
Cloning into '.'...
remote: Enumerating objects: 39, done.
remote: Counting objects: 100% (39/39), done.
remote: Compressing objects: 100% (24/24), done.
remote: Total 39 (delta 14), reused 39 (delta 14), pack-reused 0
Receiving objects: 100% (39/39), 6.65 KiB | 2.22 MiB/s, done.
Resolving deltas: 100% (14/14), done.

$ explorer .

Cloned
$ git log --oneline
6430776 (HEAD -> main, origin/main, origin/HEAD) Website added to readme
f59f16f Readme title changed
9c47007 Pushing to remote repository start
fc7c9a1 Merge branch feature/middlename
a15c267 Middlename added, branch:feature/middlename
19e04a9 Lastname added, branch:feature/lastname
30c95ea Handle merge conflicts start..
dbdee21 Twitter handle added
5b15f53 Abschnitt 5 start.
d084cf0 .gitignore file added
02ab4ea git history.. command
1a33eea Autor added to readme
dfb342d readme file created

$ git log --oneline
f59f16f (HEAD -> main, origin/main) Readme title changed
9c47007 Pushing to remote repository start
fc7c9a1 Merge branch feature/middlename
a15c267 Middlename added, branch:feature/middlename
19e04a9 Lastname added, branch:feature/lastname
30c95ea Handle merge conflicts start..
dbdee21 Twitter handle added
5b15f53 Abschnitt 5 start.
d084cf0 .gitignore file added
02ab4ea git history.. command
1a33eea Autor added to readme
dfb342d readme file created	

$ git pull origin main
From https://github.com/uruc-developer/git-lernen
 * branch            main       -> FETCH_HEAD
Updating f59f16f..6430776
Fast-forward
 readme.txt | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
 
 
git pull = git fetch + git merge

$ git commit -m "Https added in to readme"
[main 3a52400] Https added in to readme
 1 file changed, 1 insertion(+), 1 deletion(-)
 

$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 300 bytes | 300.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/uruc-developer/git-lernen.git
   6430776..3a52400  main -> main



$ git fetch origin main
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (1/1), done.
remote: Total 3 (delta 2), reused 3 (delta 2), pack-reused 0
Unpacking objects: 100% (3/3), 280 bytes | 40.00 KiB/s, done.
From https://github.com/uruc-developer/git-lernen
 * branch            main       -> FETCH_HEAD
   6430776..3a52400  main       -> origin/main
   
   
$ git status
On branch main
Your branch is behind 'origin/main' by 1 commit, and can be fast-forwarded.
  (use "git pull" to update your local branch)

nothing to commit, working tree clean   


$ git branch
* main

$ git branch -a
* main
  remotes/origin/main
  
  
  
  
$ git merge origin/main
Updating 6430776..3a52400
Fast-forward
 readme.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)


A7---------------------------------- Creating and merging pul requests...

$ git push origin main
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 1.82 KiB | 1.82 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/uruc-developer/git-lernen.git
   3a52400..3b2604b  main -> main


$ git branch feature/AddGitHub

$ git checkout feature/AddGitHub
Switched to branch 'feature/AddGitHub'

   
$ git commit -m "GitHub added to readme"
[feature/AddGitHub f54ef84] GitHub added to readme
 1 file changed, 2 insertions(+), 1 deletion(-)

$ git push origin feature/AddGitHub
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 335 bytes | 335.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
remote:
remote: Create a pull request for 'feature/AddGitHub' on GitHub by visiting:
remote:      https://github.com/uruc-developer/git-lernen/pull/new/feature/AddGitHub
remote:
To https://github.com/uruc-developer/git-lernen.git
 * [new branch]      feature/AddGitHub -> feature/AddGitHub

$ git branch
* feature/AddGitHub
  main

$ git branch
  feature/AddGitHub
* main

$ git merge feature/AddGitHub
Updating 3b2604b..f54ef84
Fast-forward
 readme.txt | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

$ git push origin main
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/uruc-developer/git-lernen.git
   3b2604b..f54ef84  main -> main
   
$ git branch -d feature/AddGitHub
Deleted branch feature/AddGitHub (was f54ef84).


Forking a repository on GitHub
   
sudevde:main

$ git branch sudevde_main

$ git pull https://github.com/sudevde/git-lernen.git main
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 1.01 KiB | 148.00 KiB/s, done.
From https://github.com/sudevde/git-lernen
 * branch            main       -> FETCH_HEAD
Updating f54ef84..e13e692
Fast-forward
 readme.md  | 6 ++++++
 readme.txt | 6 ------
 2 files changed, 6 insertions(+), 6 deletions(-)
 create mode 100644 readme.md
 delete mode 100644 readme.txt
 
 $ git checkout main
 
$ git merge sudevde_main
Updating f54ef84..e13e692
Fast-forward
 readme.md  | 6 ++++++
 readme.txt | 6 ------
 2 files changed, 6 insertions(+), 6 deletions(-)
 create mode 100644 readme.md
 delete mode 100644 readme.txt

$ git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 1.03 KiB | 1.03 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/uruc-developer/git-lernen.git
   f54ef84..e13e692  main -> main

   
